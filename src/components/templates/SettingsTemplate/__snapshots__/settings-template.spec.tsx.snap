// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SettingsTemplate /> should be able to match with snapshot 1`] = `
<View
  style={
    [
      {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "gap": 31,
        "justifyContent": "space-between",
        "width": "100%",
      },
    ]
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "flexDirection": "row",
          "gap": 31,
          "width": "100%",
        },
        {},
      ]
    }
  >
    <Image
      onError={[Function]}
      resizeMode="cover"
      source={
        {
          "uri": "https://",
        }
      }
      style={
        [
          {
            "borderColor": "#E83F5B",
            "borderRadius": 125,
            "borderWidth": 6,
            "height": 157,
            "width": 157,
          },
        ]
      }
    />
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        fontWeight="semiBold"
        numberOfLines={1}
        style={
          [
            {
              "color": "#0D0D0D",
              "fontFamily": "Poppins_600SemiBold",
              "fontSize": 31,
            },
            {
              "fontSize": 31,
            },
          ]
        }
      >
        John Doe
      </Text>
      <Text
        fontWeight="regular"
        numberOfLines={1}
        style={
          [
            {
              "color": "#0D0D0D",
              "fontFamily": "Poppins_400Regular",
              "fontSize": 31,
            },
            {},
          ]
        }
      >
        john@example.com
      </Text>
    </View>
  </View>
  <Text
    fontWeight="medium"
    style={
      [
        {
          "color": "#0D0D0D",
          "fontFamily": "Poppins_500Medium",
          "fontSize": 31,
        },
        {
          "color": "#FE8C00",
        },
      ]
    }
  >
    settings.wallet
    :
     
    <Text
      fontWeight="semiBold"
      style={
        [
          {
            "color": "#0D0D0D",
            "fontFamily": "Poppins_600SemiBold",
            "fontSize": 31,
          },
          {
            "color": "#FE8C00",
          },
        ]
      }
    >
      $20.00
    </Text>
  </Text>
  <RCTScrollView
    ItemSeparatorComponent={[Function]}
    data={
      [
        {
          "icon": "map-pin",
          "name": "settings.location",
          "onPress": [MockFunction] {
            "calls": [
              [],
            ],
            "results": [
              {
                "type": "return",
                "value": undefined,
              },
            ],
          },
        },
        {
          "icon": "user",
          "name": "settings.profile",
          "onPress": [MockFunction],
        },
        {
          "icon": "settings",
          "name": "settings.settings",
          "onPress": [MockFunction],
        },
        {
          "icon": "credit-card",
          "name": "settings.addValue",
          "onPress": [MockFunction],
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={[]}
    style={
      [
        {
          "width": "100%",
        },
        {},
      ]
    }
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <RNGestureHandlerButton
          activeOpacity={0.105}
          collapsable={false}
          delayLongPress={600}
          handlerTag={26}
          handlerType="NativeViewGestureHandler"
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={
            [MockFunction] {
              "calls": [
                [],
              ],
              "results": [
                {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
          style={
            {
              "alignItems": "center",
              "backgroundColor": "#F0F0F5",
              "borderRadius": 16,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
              "width": "100%",
            }
          }
          underlayColor="black"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "black",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": 16,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  [
                    {
                      "bottom": 3,
                      "fontSize": 31,
                      "marginRight": 16,
                    },
                  ],
                  {
                    "fontFamily": "Feather",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
            <Text
              style={
                [
                  {
                    "color": "#0D0D0D",
                    "fontFamily": "Poppins_400Regular",
                    "fontSize": 31,
                  },
                  {
                    "fontSize": 31,
                  },
                ]
              }
            >
              settings.location
            </Text>
          </View>
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": undefined,
                  "fontSize": 12,
                },
                [
                  {
                    "fontSize": 35,
                  },
                ],
                {
                  "fontFamily": "Feather",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {},
              ]
            }
          >
            
          </Text>
        </RNGestureHandlerButton>
        <View
          style={
            [
              {
                "marginTop": 16,
              },
            ]
          }
        />
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <RNGestureHandlerButton
          activeOpacity={0.105}
          collapsable={false}
          delayLongPress={600}
          handlerTag={27}
          handlerType="NativeViewGestureHandler"
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[MockFunction]}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "#F0F0F5",
              "borderRadius": 16,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
              "width": "100%",
            }
          }
          underlayColor="black"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "black",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": 16,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  [
                    {
                      "bottom": 3,
                      "fontSize": 31,
                      "marginRight": 16,
                    },
                  ],
                  {
                    "fontFamily": "Feather",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
            <Text
              style={
                [
                  {
                    "color": "#0D0D0D",
                    "fontFamily": "Poppins_400Regular",
                    "fontSize": 31,
                  },
                  {
                    "fontSize": 31,
                  },
                ]
              }
            >
              settings.profile
            </Text>
          </View>
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": undefined,
                  "fontSize": 12,
                },
                [
                  {
                    "fontSize": 35,
                  },
                ],
                {
                  "fontFamily": "Feather",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {},
              ]
            }
          >
            
          </Text>
        </RNGestureHandlerButton>
        <View
          style={
            [
              {
                "marginTop": 16,
              },
            ]
          }
        />
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <RNGestureHandlerButton
          activeOpacity={0.105}
          collapsable={false}
          delayLongPress={600}
          handlerTag={28}
          handlerType="NativeViewGestureHandler"
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[MockFunction]}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "#F0F0F5",
              "borderRadius": 16,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
              "width": "100%",
            }
          }
          underlayColor="black"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "black",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": 16,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  [
                    {
                      "bottom": 3,
                      "fontSize": 31,
                      "marginRight": 16,
                    },
                  ],
                  {
                    "fontFamily": "Feather",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
            <Text
              style={
                [
                  {
                    "color": "#0D0D0D",
                    "fontFamily": "Poppins_400Regular",
                    "fontSize": 31,
                  },
                  {
                    "fontSize": 31,
                  },
                ]
              }
            >
              settings.settings
            </Text>
          </View>
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": undefined,
                  "fontSize": 12,
                },
                [
                  {
                    "fontSize": 35,
                  },
                ],
                {
                  "fontFamily": "Feather",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {},
              ]
            }
          >
            
          </Text>
        </RNGestureHandlerButton>
        <View
          style={
            [
              {
                "marginTop": 16,
              },
            ]
          }
        />
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <RNGestureHandlerButton
          activeOpacity={0.105}
          collapsable={false}
          delayLongPress={600}
          handlerTag={29}
          handlerType="NativeViewGestureHandler"
          onActiveStateChange={[Function]}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          onPress={[MockFunction]}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "#F0F0F5",
              "borderRadius": 16,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
              "width": "100%",
            }
          }
          underlayColor="black"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "black",
                "borderBottomLeftRadius": undefined,
                "borderBottomRightRadius": undefined,
                "borderRadius": 16,
                "borderTopLeftRadius": undefined,
                "borderTopRightRadius": undefined,
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  [
                    {
                      "bottom": 3,
                      "fontSize": 31,
                      "marginRight": 16,
                    },
                  ],
                  {
                    "fontFamily": "Feather",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              
            </Text>
            <Text
              style={
                [
                  {
                    "color": "#0D0D0D",
                    "fontFamily": "Poppins_400Regular",
                    "fontSize": 31,
                  },
                  {
                    "fontSize": 31,
                  },
                ]
              }
            >
              settings.addValue
            </Text>
          </View>
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": undefined,
                  "fontSize": 12,
                },
                [
                  {
                    "fontSize": 35,
                  },
                ],
                {
                  "fontFamily": "Feather",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {},
              ]
            }
          >
            
          </Text>
        </RNGestureHandlerButton>
      </View>
    </View>
  </RCTScrollView>
  <RNGestureHandlerButton
    activeOpacity={0.105}
    collapsable={false}
    delayLongPress={600}
    handlerTag={30}
    handlerType="NativeViewGestureHandler"
    onActiveStateChange={[Function]}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#FE8C00",
        "borderRadius": 16,
        "justifyContent": "center",
        "marginTop": 16,
        "paddingBottom": 31,
        "paddingLeft": 31,
        "paddingRight": 31,
        "paddingTop": 31,
        "width": "100%",
      }
    }
    underlayColor="black"
  >
    <View
      collapsable={false}
      style={
        {
          "backgroundColor": "black",
          "borderBottomLeftRadius": undefined,
          "borderBottomRightRadius": undefined,
          "borderRadius": 16,
          "borderTopLeftRadius": undefined,
          "borderTopRightRadius": undefined,
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
    <Text
      style={
        [
          {
            "color": "#0D0D0D",
            "fontFamily": "Poppins_400Regular",
            "fontSize": 31,
          },
          {
            "color": "#FFFFFF",
          },
        ]
      }
    >
      Sair
    </Text>
  </RNGestureHandlerButton>
</View>
`;
